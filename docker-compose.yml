# docker-compose.yml
version: "3"

services:
  # MySQL database
  db:
    image: mariadb
    restart: unless-stopped
    container_name: mrm-db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress
    volumes:
      - db-data:/var/lib/mysql

  # Wordpress
  wp:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    container_name: mrm
    environment:
      WORDPRESS_DB_HOST: mrm-db
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_DEBUG: 1
    volumes:
      - wp-data:/var/www/html
      - ./:/var/www/html/wp-content/plugins/mrm
    ports:
      - 8282:80
    depends_on:
      - db

#  cli:
#    image: wordpress:cli
#    user: "33:33"
#    environment:
#      WORDPRESS_DB_HOST: mrm-db
#      WORDPRESS_DB_USER: wordpress
#      WORDPRESS_DB_PASSWORD: wordpress
#      WORDPRESS_DB_NAME: wordpress
#    volumes:
#      - wp-data:/var/www/html
#      - ./:/var/www/html/wp-content/plugins/mrm
#      - ./bin/docker-setup.sh:/opt/mrm/docker-setup.sh
#    links:
#      - db
#    depends_on:
#      - db
#      - wp
#    command: sh /opt/mrm/docker-setup.sh

# Make network name pretty
networks:
  default:
    name: mrm-network

# Persist DB and WordPress data across containers
volumes:
  db-data:
  wp-data: