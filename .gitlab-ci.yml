# Composer stores all downloaded packages in the vendor/ directory.
# Do not use the following if the vendor/ directory is committed to
# your git repository.
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - vendor/

# Our stages
stages:
  - test

# before running the CI server setup
before_script:
  # Install git, postgres and zip library, the php image doesn't have installed
  - apt-get update -yqq
  - apt install git libpq-dev libzip-dev zip -yqq

  # install the required packages for the running CI tests
  - apt-get -yqqf install vim wget zip unzip subversion default-mysql-client libmcrypt-dev default-libmysqlclient-dev --fix-missing

  # Install database driver
  - docker-php-ext-install mysqli pdo_mysql

  # Install composer
  - curl -sS https://getcomposer.org/installer | php

  # Install all project dependencies
  - php composer.phar install

  - bash bin/install-wp-tests.sh wordpress_test root mysql mysql $WP_VERSION

services:
  - mysql:latest

variables:
  # Configure mysql service (https://hub.docker.com/_/mysql/)
  MYSQL_DATABASE: wordpress_tests
  MYSQL_ROOT_PASSWORD: mysql
  WP_VERSION: latest
  WP_MULTISITE: "0"

# We test PHP 7
test:php7:
  stage: test
  image: php:7
  script:
    - vendor/bin/phpunit --coverage-text --coverage-clover=coverage.clover --colors=never
  rules:
    - if: ($CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop" && $CI_PIPELINE_SOURCE == "merge_request_event")

# We test PHP 7.4
test:php7.4:
  stage: test
  image: php:7.4
  script:
    - vendor/bin/phpunit --coverage-text --coverage-clover=coverage.clover --colors=never
  rules:
    - if: ($CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop" && $CI_PIPELINE_SOURCE == "merge_request_event")
# phpcs:
#   stage: syntax
#   script:
#     - ./vendor/bin/phpcs
#   rules:
#     - if: ($CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop" && $CI_PIPELINE_SOURCE == "merge_request_event")
